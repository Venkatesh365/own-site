{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\REACT APP\\\\myapp\\\\src\\\\components\\\\Upload\\\\index.js\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Upload extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: '',\n      brand: '',\n      price: '',\n      id: '',\n      imageUrl: '',\n      rating: ''\n    };\n\n    this.onSubmitSuccess = jwtTkoken => {\n      const {\n        history\n      } = this.props;\n      history.replace('/products');\n    };\n\n    this.submitForm = async event => {\n      event.preventDefault();\n      const {\n        title\n      } = this.state;\n      const {\n        brand\n      } = this.state;\n      const {\n        price\n      } = this.state;\n      const {\n        id\n      } = this.state;\n      const {\n        imageUrl\n      } = this.state;\n      const {\n        rating\n      } = this.state;\n\n      if (title !== \"\" && brand !== \"\" && price !== \"\" && id !== \"\" && imageUrl !== \"\" && rating !== \"\") {\n        const registerData = JSON.stringify(this.state);\n        console.log(registerData);\n        axios({\n          method: 'POST',\n          url: 'https://prime-upload.herokuapp.com/upload',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: registerData\n        }).then(data => {\n          const objData = data;\n          console.log(data);\n\n          if (data.status === 200) {\n            this.onSubmitSuccess();\n          }\n\n          if (data.data === \"User already exists\") {\n            alert(\"User already exists\");\n          }\n        });\n      }\n    };\n\n    this.onChangeTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.onChangeBrand = event => {\n      this.setState({\n        brand: event.target.value\n      });\n    };\n\n    this.onChangePrice = event => {\n      this.setState({\n        price: event.target.value\n      });\n    };\n\n    this.onChangeId = event => {\n      this.setState({\n        id: event.target.value\n      });\n    };\n\n    this.onChangeImageUrl = event => {\n      this.setState({\n        imageUrl: event.target.value\n      });\n    };\n\n    this.onChangeRating = event => {\n      this.setState({\n        rating: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: this.submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"title\",\n            children: \"TITLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            className: \"username-input-filed\",\n            value: this.state.title,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"title is required\");\n              }\n            },\n            onChange: this.onChangeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"brand\",\n            children: \"BRAND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"brand\",\n            className: \"username-input-filed\",\n            value: this.state.brand,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"brand is required\");\n              }\n            },\n            onChange: this.onChangeBrand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"price\",\n            children: \"PRICE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"price\",\n            className: \"password-input-filed\",\n            value: this.state.price,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"price is required\");\n              }\n            },\n            onChange: this.onChangePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"id\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"id\",\n            className: \"username-input-filed\",\n            value: this.state.id,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"id is required\");\n              }\n            },\n            onChange: this.onChangeId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"imageurl\",\n            children: \"IMAGE_URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"imageurl\",\n            className: \"username-input-filed\",\n            value: this.state.imageUrl,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"image_url is required\");\n              }\n            },\n            onChange: this.onChangeImageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"rating\",\n            children: \"RATING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"rating\",\n            className: \"username-input-filed\",\n            value: this.state.rating,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"rating is required\");\n              }\n            },\n            onChange: this.onChangeRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/MY PC/Desktop/REACT APP/myapp/src/components/Upload/index.js"],"names":["Component","axios","Upload","state","title","brand","price","id","imageUrl","rating","onSubmitSuccess","jwtTkoken","history","props","replace","submitForm","event","preventDefault","registerData","JSON","stringify","console","log","method","url","headers","data","then","objData","status","alert","onChangeTitle","setState","target","value","onChangeBrand","onChangePrice","onChangeId","onChangeImageUrl","onChangeRating","render","e"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Upload extends Component {\r\n  state = {\r\n    title:'',\r\n    brand: '',\r\n    price: '',\r\n    id:'',\r\n    imageUrl:'',\r\n    rating:''\r\n    \r\n  }\r\n \r\n  onSubmitSuccess = (jwtTkoken) => {\r\n    const {history} = this.props;\r\n   \r\n    history.replace('/products');\r\n  }\r\n \r\n  submitForm = async event => {\r\n    event.preventDefault();\r\n    const {title} = this.state\r\n    const {brand} = this.state\r\n    const {price} = this.state\r\n    const {id} = this.state\r\n    const {imageUrl}=this.state\r\n    const {rating}=this.state\r\n    if(title !== \"\" && brand !== \"\"&&price!==\"\"&&id!==\"\"&&imageUrl!==\"\"&&rating!==\"\"){\r\n      const registerData = JSON.stringify(this.state)\r\n      console.log(registerData)\r\n      axios({\r\n          method: 'POST',\r\n          url: 'https://prime-upload.herokuapp.com/upload',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n                  },\r\n          data: registerData  \r\n      })     \r\n      .then(data => {\r\n         const objData = data\r\n         console.log(data)\r\n         if(data.status === 200 ){\r\n           this.onSubmitSuccess()\r\n         }if(data.data===\"User already exists\"){\r\n             alert(\"User already exists\")\r\n         }\r\n      }    \r\n      )\r\n    }\r\n  }\r\n\r\n  onChangeTitle = event => {\r\n    this.setState({title: event.target.value})\r\n  }\r\n\r\n  onChangeBrand = event => {\r\n    this.setState({brand: event.target.value})\r\n  }\r\n  onChangePrice = event => {\r\n    this.setState({price: event.target.value})\r\n  }\r\n  onChangeId = event => {\r\n    this.setState({id: event.target.value})\r\n  }\r\n  onChangeImageUrl = event => {\r\n    this.setState({imageUrl: event.target.value})\r\n  }\r\n  onChangeRating = event => {\r\n    this.setState({rating: event.target.value})\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"login-form-container\">\r\n      \r\n        <form className=\"form-container\" onSubmit={this.submitForm}>\r\n         \r\n           <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"title\">TITLE</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.title}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"title is required\")}} }\r\n              onChange={this.onChangeTitle}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"brand\">BRAND</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"brand\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.brand}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"brand is required\")}} }\r\n              onChange={this.onChangeBrand}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"price\">PRICE</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"price\"\r\n              className=\"password-input-filed\"\r\n              value={this.state.price}         \r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"price is required\")}} }\r\n              onChange={this.onChangePrice}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"id\">ID</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"id\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.id}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"id is required\")}} }\r\n              onChange={this.onChangeId}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"imageurl\">IMAGE_URL</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"imageurl\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.imageUrl}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"image_url is required\")}} }\r\n              onChange={this.onChangeImageUrl}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"rating\">RATING</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"rating\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.rating}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"rating is required\")}} }\r\n              onChange={this.onChangeRating}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Upload\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Upload"]},"metadata":{},"sourceType":"module"}