{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\REACT APP\\\\myapp\\\\src\\\\components\\\\Register\\\\index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.onSubmitSuccess = jwtTkoken => {\n      const {\n        history\n      } = this.props;\n      history.replace('/login');\n    };\n\n    this.submitForm = async event => {\n      event.preventDefault();\n      const {\n        username\n      } = this.state;\n      const {\n        password\n      } = this.state;\n\n      if (username !== \"\" && password !== \"\") {\n        const registerData = JSON.stringify(this.state);\n        axios({\n          method: 'POST',\n          url: 'https://a-u-t-h-e-n-t-i-c-a-t-i-o-n.herokuapp.com/users/',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: registerData\n        }).then(data => {\n          if (data.status === 200) {\n            this.onSubmitSuccess();\n          }\n        });\n      } else {\n        console.log(\"Please fill the Username and Password\");\n      }\n    };\n\n    this.onChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.onChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://assets.ccbp.in/frontend/react-js/nxt-trendz-logo-img.png\",\n        className: \"login-website-logo-mobile-image\",\n        alt: \"website logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://assets.ccbp.in/frontend/react-js/nxt-trendz-login-img.png\",\n        className: \"login-image\",\n        alt: \"website login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: this.submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://assets.ccbp.in/frontend/react-js/nxt-trendz-logo-img.png\",\n          className: \"login-website-logo-desktop-image\",\n          alt: \"website logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"username\",\n            children: \"USERNAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            className: \"username-input-filed\",\n            value: this.state.username,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"Name is required\");\n              }\n            },\n            onChange: this.onChangeUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            htmlFor: \"password\",\n            children: \"PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            className: \"password-input-filed\",\n            value: this.state.password,\n            onBlur: e => {\n              if (e.target.value === \"\") {\n                alert(\"Password is required\");\n              }\n            },\n            onChange: this.onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/MY PC/Desktop/REACT APP/myapp/src/components/Register/index.js"],"names":["Component","Cookies","Redirect","axios","Register","state","username","password","onSubmitSuccess","jwtTkoken","history","props","replace","submitForm","event","preventDefault","registerData","JSON","stringify","method","url","headers","data","then","status","console","log","onChangeUsername","setState","target","value","onChangePassword","render","e","alert"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: '',\r\n    password: ''\r\n  }\r\n \r\n  onSubmitSuccess = (jwtTkoken) => {\r\n    const {history} = this.props;\r\n   \r\n    history.replace('/login');\r\n  }\r\n \r\n  submitForm = async event => {\r\n    event.preventDefault();\r\n    const {username} = this.state\r\n    const {password} = this.state\r\n    if(username !== \"\" && password !== \"\"){\r\n      const registerData = JSON.stringify(this.state)\r\n      axios({\r\n          method: 'POST',\r\n          url: 'https://a-u-t-h-e-n-t-i-c-a-t-i-o-n.herokuapp.com/users/',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n                  },\r\n          data: registerData  \r\n      })     \r\n      .then(data => {\r\n         if(data.status === 200 ){\r\n           this.onSubmitSuccess()\r\n         } \r\n      }    \r\n      )\r\n    }else{\r\n      console.log(\"Please fill the Username and Password\")\r\n    }\r\n  }\r\n\r\n  onChangeUsername = event => {\r\n    this.setState({username: event.target.value})\r\n  }\r\n\r\n  onChangePassword = event => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"login-form-container\">\r\n        <img\r\n          src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-logo-img.png\"\r\n          className=\"login-website-logo-mobile-image\"\r\n          alt=\"website logo\"\r\n        />\r\n        <img\r\n          src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-login-img.png\"\r\n          className=\"login-image\"\r\n          alt=\"website login\"\r\n        />\r\n        <form className=\"form-container\" onSubmit={this.submitForm}>\r\n          <img\r\n            src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-logo-img.png\"\r\n            className=\"login-website-logo-desktop-image\"\r\n            alt=\"website logo\"\r\n          />\r\n\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"username\">USERNAME</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.username}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"Name is required\")}} }\r\n              onChange={this.onChangeUsername}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"password\">PASSWORD</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"password-input-filed\"\r\n              value={this.state.password}         \r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"Password is required\")}} }\r\n              onChange={this.onChangePassword}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}