{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\REACT APP\\\\myapp\\\\src\\\\components\\\\Upload\\\\index.js\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport Header from '../Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Upload extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: '',\n      brand: '',\n      price: '',\n      id: '',\n      image_url: '',\n      rating: ''\n    };\n\n    this.onChangeImageUrl = async e => {\n      const files = e.target.files;\n      const data = new FormData();\n      data.append('file', files[0]);\n      data.append('upload_preset', 'Vinay_eswar');\n      data.append('cloud_name', 'pevv-ccbp-tech');\n      var imgurl = 'https://api.cloudinary.com/v1_1/pevv-ccbp-tech/image/upload';\n      const config = {\n        method: \"POST\",\n        body: data\n      };\n      const res = await fetch(imgurl, config);\n      const file = await res.json();\n      this.setState({\n        image_url: file.url\n      });\n      console.log(file.url);\n    };\n\n    this.onSubmitSuccess = jwtTkoken => {\n      const {\n        history\n      } = this.props;\n      history.replace('/products');\n    };\n\n    this.submitForm = async event => {\n      event.preventDefault();\n      const {\n        title\n      } = this.state;\n      const {\n        brand\n      } = this.state;\n      const {\n        price\n      } = this.state;\n      const {\n        id\n      } = this.state;\n      const {\n        image_url\n      } = this.state;\n      const {\n        rating\n      } = this.state;\n\n      if (title !== \"\" && brand !== \"\" && price !== \"\" && id !== \"\" && image_url !== \"\" && rating !== \"\") {\n        const registerData = JSON.stringify(this.state);\n        axios({\n          method: 'POST',\n          url: 'https://e-c-o-m-m-e-r-c-e.herokuapp.com/upload',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: registerData\n        }).then(data => {\n          console.log(data);\n\n          if (data.status === 200) {\n            this.onSubmitSuccess();\n          }\n\n          if (data.data === \"User already exists\") {\n            alert(\"User already exists\");\n          }\n        });\n      }\n    };\n\n    this.onChangeTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.onChangeBrand = event => {\n      this.setState({\n        brand: event.target.value\n      });\n    };\n\n    this.onChangePrice = event => {\n      this.setState({\n        price: event.target.value\n      });\n    };\n\n    this.onChangeId = event => {\n      this.setState({\n        id: event.target.value\n      });\n    };\n\n    this.onChangeRating = event => {\n      this.setState({\n        rating: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-container\",\n          onSubmit: this.submitForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              htmlFor: \"title\",\n              children: \"TITLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              className: \"username-input-filed\",\n              value: this.state.title,\n              onBlur: e => {\n                if (e.target.value === \"\") {\n                  alert(\"title is required\");\n                }\n              },\n              onChange: this.onChangeTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              htmlFor: \"brand\",\n              children: \"BRAND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"brand\",\n              className: \"username-input-filed\",\n              value: this.state.brand,\n              onBlur: e => {\n                if (e.target.value === \"\") {\n                  alert(\"brand is required\");\n                }\n              },\n              onChange: this.onChangeBrand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              htmlFor: \"price\",\n              children: \"PRICE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"price\",\n              className: \"password-input-filed\",\n              value: this.state.price,\n              onBlur: e => {\n                if (e.target.value === \"\") {\n                  alert(\"price is required\");\n                }\n              },\n              onChange: this.onChangePrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              htmlFor: \"id\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"id\",\n              className: \"username-input-filed\",\n              value: this.state.id,\n              onBlur: e => {\n                if (e.target.value === \"\") {\n                  alert(\"id is required\");\n                }\n              },\n              onChange: this.onChangeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"imageurl\",\n              style: {\n                display: \"none\"\n              },\n              onChange: this.onChangeImageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"username-input-filed\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                htmlFor: \"imageurl\",\n                children: \"Upload_Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              htmlFor: \"rating\",\n              children: \"RATING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"rating\",\n              className: \"username-input-filed\",\n              value: this.state.rating,\n              onBlur: e => {\n                if (e.target.value === \"\") {\n                  alert(\"rating is required\");\n                }\n              },\n              onChange: this.onChangeRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-button\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/MY PC/Desktop/REACT APP/myapp/src/components/Upload/index.js"],"names":["Component","axios","Header","Upload","state","title","brand","price","id","image_url","rating","onChangeImageUrl","e","files","target","data","FormData","append","imgurl","config","method","body","res","fetch","file","json","setState","url","console","log","onSubmitSuccess","jwtTkoken","history","props","replace","submitForm","event","preventDefault","registerData","JSON","stringify","headers","then","status","alert","onChangeTitle","value","onChangeBrand","onChangePrice","onChangeId","onChangeRating","render","display"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Header from '../Header'\r\nclass Upload extends Component {\r\n  state = {\r\n    title:'',\r\n    brand: '',\r\n    price: '',\r\n    id:'',\r\n    image_url:'',\r\n    rating:''\r\n    \r\n  }\r\n\r\n  onChangeImageUrl = async e => {\r\n    const files = e.target.files\r\n    const data = new FormData()\r\n    data.append('file', files[0])\r\n    data.append('upload_preset', 'Vinay_eswar')\r\n    data.append('cloud_name', 'pevv-ccbp-tech');\r\n    var imgurl = 'https://api.cloudinary.com/v1_1/pevv-ccbp-tech/image/upload';\r\n    const config = {\r\n      method: \"POST\",\r\n      body: data \r\n  };\r\n    const res = await fetch(imgurl, config)\r\n    const file = await res.json()\r\n    this.setState({image_url : file.url})\r\n    console.log(file.url)\r\n  }\r\n\r\n \r\n  onSubmitSuccess = (jwtTkoken) => {\r\n    const {history} = this.props;\r\n    history.replace('/products');\r\n  }\r\n \r\n  submitForm = async event => {\r\n    event.preventDefault();\r\n    const {title} = this.state\r\n    const {brand} = this.state\r\n    const {price} = this.state\r\n    const {id} = this.state\r\n    const {image_url}=this.state\r\n    const {rating}=this.state\r\n    if((title !== \"\") && (brand !== \"\") && (price !== \"\") && (id !== \"\") && (image_url !== \"\") && (rating !== \"\")){\r\n      const registerData = JSON.stringify(this.state)\r\n      axios({\r\n          method: 'POST',\r\n          url: 'https://e-c-o-m-m-e-r-c-e.herokuapp.com/upload',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n                  },\r\n          data: registerData  \r\n      })     \r\n      .then(data => {\r\n         console.log(data)\r\n         if(data.status === 200 ){\r\n           this.onSubmitSuccess()\r\n         }if(data.data === \"User already exists\"){\r\n             alert(\"User already exists\")\r\n         }\r\n      }    \r\n      )\r\n    }\r\n  }\r\n\r\n  onChangeTitle = event => {\r\n    this.setState({title: event.target.value})\r\n  }\r\n\r\n  onChangeBrand = event => {\r\n    this.setState({brand: event.target.value})\r\n  }\r\n  onChangePrice = event => {\r\n    this.setState({price: event.target.value})\r\n  }\r\n  onChangeId = event => {\r\n    this.setState({id: event.target.value})\r\n  }\r\n  onChangeRating = event => {\r\n    this.setState({rating: event.target.value})\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n      <Header/>\r\n      <div className=\"login-form-container\">\r\n      \r\n        <form className=\"form-container\" onSubmit={this.submitForm}>\r\n         \r\n           <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"title\">TITLE</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.title}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"title is required\")}} }\r\n              onChange={this.onChangeTitle}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"brand\">BRAND</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"brand\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.brand}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"brand is required\")}} }\r\n              onChange={this.onChangeBrand}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"price\">PRICE</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"price\"\r\n              className=\"password-input-filed\"\r\n              value={this.state.price}         \r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"price is required\")}} }\r\n              onChange={this.onChangePrice}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"id\">ID</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"id\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.id}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"id is required\")}} }\r\n              onChange={this.onChangeId}\r\n            />\r\n          </div>\r\n          <div className=\"input-container\">           \r\n            <input\r\n              type=\"file\"\r\n              id=\"imageurl\"\r\n              style={{display:\"none\"}}             \r\n              onChange={this.onChangeImageUrl}\r\n            />           \r\n            <button className=\"username-input-filed\">\r\n                <label className=\"input-label\" htmlFor=\"imageurl\">\r\n                    Upload_Image\r\n                </label>\r\n            </button>\r\n            \r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label className=\"input-label\" htmlFor=\"rating\">RATING</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"rating\"\r\n              className=\"username-input-filed\"\r\n              value={this.state.rating}\r\n              onBlur={e => { if(e.target.value === \"\"){ alert(\"rating is required\")}} }\r\n              onChange={this.onChangeRating}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Upload\r\n          </button>\r\n        \r\n        </form>\r\n        \r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Upload"]},"metadata":{},"sourceType":"module"}